classes:
  MoveOnlyParam:
    attributes:
      i:
    methods:
      MoveOnlyParam:
  ClassWithTrampoline:
    trampoline_inline_code: |
      int get42() { return 42; }
    methods:
      fnWithMoveOnlyParam:
        # can't autodetect move-only parameters, so have to do it manually
        # and have to provide a virtual_xform also
        cpp_code: |
          [](ClassWithTrampoline *self, int i) {
            MoveOnlyParam p;
            p.i = i;
            return self->fnWithMoveOnlyParam(std::move(p));
          }
        virtual_xform: |
          [&](py::function fn) -> int {
            return py::cast<int>(fn(param.i));
          }
      ClassWithTrampoline:
        overloads:
          "":
          const int&:
      check_moveonly:
      getE:
    attributes:
      kConst:
    enums:
      E:
  ConstexprTrampoline:
    methods:
      ConstexprTrampoline:
      fn:
  ChildConstexprTrampoline:
    attributes:
      something:
    methods:
      ChildConstexprTrampoline:
      fn:

inline_code: |
  cls_ClassWithTrampoline
    .def("get42", [](ClassWithTrampoline_Trampoline * self) { return self->get42(); })
  ;
